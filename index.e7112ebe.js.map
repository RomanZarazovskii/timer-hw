{"mappings":"AA+Cc,IA/Cd,MAaEA,QACEC,KAAKC,cACLD,KAAKE,WAAaC,aAAY,KAC5BH,KAAKC,aAAa,GACjB,I,CAGLA,cACE,MAAMG,EAAOJ,KAAKK,WAAa,IAAIC,KACnC,GAAIF,GAAQ,EAMV,OALAG,cAAcP,KAAKE,YACnBF,KAAKQ,KAAKC,KAAKC,YAAc,KAC7BV,KAAKQ,KAAKG,MAAMD,YAAc,KAC9BV,KAAKQ,KAAKI,KAAKF,YAAc,UAC7BV,KAAKQ,KAAKK,KAAKH,YAAc,MAI/B,MAAMD,EAAOK,KAAKC,MAAMX,EAAQ,OAC1BO,EAAQG,KAAKC,MAAMX,EAAS,MAAyB,MACrDQ,EAAOE,KAAKC,MAAMX,EAAS,KAAoB,KAC/CS,EAAOC,KAAKC,MAAMX,EAAS,IAAc,KAE/CJ,KAAKQ,KAAKC,KAAKC,YAAcV,KAAKgB,IAAIP,GACtCT,KAAKQ,KAAKG,MAAMD,YAAcV,KAAKgB,IAAIL,GACvCX,KAAKQ,KAAKI,KAAKF,YAAcV,KAAKgB,IAAIJ,GACtCZ,KAAKQ,KAAKK,KAAKH,YAAcV,KAAKgB,IAAIH,E,CAGxCG,IAAIC,GACF,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,CA1CnCC,aAAYC,SAAEA,EAAQhB,WAAEA,IACtBL,KAAKsB,QAAUC,SAASC,cAAcH,GACtCrB,KAAKK,WAAaA,EAClBL,KAAKQ,KAAO,CACVC,KAAMT,KAAKsB,QAAQE,cAAc,uBACjCb,MAAOX,KAAKsB,QAAQE,cAAc,wBAClCZ,KAAMZ,KAAKsB,QAAQE,cAAc,uBACjCX,KAAMb,KAAKsB,QAAQE,cAAc,wBAEnCxB,KAAKD,O,GAqCwB,CAC/BsB,SAAU,WACVhB,WAAY,IAAIC,KAAK","sources":["src/index.js"],"sourcesContent":["class CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.timerEl = document.querySelector(selector);\n    this.targetDate = targetDate;\n    this.refs = {\n      days: this.timerEl.querySelector('[data-value=\"days\"]'),\n      hours: this.timerEl.querySelector('[data-value=\"hours\"]'),\n      mins: this.timerEl.querySelector('[data-value=\"mins\"]'),\n      secs: this.timerEl.querySelector('[data-value=\"secs\"]'),\n    };\n    this.start();\n  }\n\n  start() {\n    this.updateTimer();\n    this.intervalId = setInterval(() => {\n      this.updateTimer();\n    }, 1000);\n  }\n\n  updateTimer() {\n    const time = this.targetDate - new Date();\n    if (time <= 0) {\n      clearInterval(this.intervalId);\n      this.refs.days.textContent = '00';\n      this.refs.hours.textContent = '00';\n      this.refs.mins.textContent = '00';\n      this.refs.secs.textContent = '00';\n      return;\n    }\n\n    const days = Math.floor(time / (1000 * 60 * 60 * 24));\n    const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n    const secs = Math.floor((time % (1000 * 60)) / 1000);\n\n    this.refs.days.textContent = this.pad(days);\n    this.refs.hours.textContent = this.pad(hours);\n    this.refs.mins.textContent = this.pad(mins);\n    this.refs.secs.textContent = this.pad(secs);\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n}\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Oct 22, 2024'),\n});\n"],"names":["start","this","updateTimer","intervalId","setInterval","time","targetDate","Date","clearInterval","refs","days","textContent","hours","mins","secs","Math","floor","pad","value","String","padStart","constructor","selector","timerEl","document","querySelector"],"version":3,"file":"index.e7112ebe.js.map"}